---
- name: Check if SAP JAVA Application Server was already installed
  stat:
    path: "/sapmnt/{{ sap_sid|upper }}/profile/DEFAULT.PFL"
  register: install_status

- name: Check if SWPM archive content was already extracted
  stat:
    path: "{{ javaci_kit }}/swpm/sapinst"
  register: swpm_file_status

- name: Include prepare kit tasks
  include_tasks: "prepare_kit.yml"
  when: not swpm_file_status.stat.exists and not install_status.stat.exists

- name: Set a default value for java_instances variable
  set_fact:
    java_instances: ""

- include_tasks: java_selected_instances.yml
  loop: "{{ java_product_instances.split(',') }}"
  loop_control:
    loop_var: outer_item

- name: Set the final value for java instances
  set_fact:
    java_instances: "{{ java_instances_temp | regex_replace('^,', '') }}"
  when: java_instances_temp is defined

- name: Generate parameter file for sapinst
  template:
    src: sapinst.cfg
    dest: "{{ javaci_kit }}/inifile.params"
  when: not install_status.stat.exists

- name: Start SAP JAVA Application Server installation
  shell: >-
    {{ javaci_kit }}/swpm/sapinst SAPINST_INPUT_PARAMETERS_URL={{ javaci_kit }}/inifile.params
    SAPINST_EXECUTE_PRODUCT_ID={{ sap_product_id }} SAPINST_SKIP_DIALOGS=true SAPINST_START_GUISERVER=false
  when: not install_status.stat.exists

- name: Enable remote access to the NetWeaver Administrator
  replace:
    path: /sapmnt/{{ sap_sid|upper }}/profile/DEFAULT.PFL
    regexp: '(.*icm/HTTP/mod_0.*)'
    replace: '#\1'

- name: Restart ICM process
  shell: |
    source /home/{{ sap_sid|lower }}adm/.sapenv.sh && \
    sapcontrol -nr {{ sap_ci_instance_number }} -function J2EEControlProcess icm RestartProcess
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ sap_sid|lower }}adm"
  when: not install_status.stat.exists

- name: Cleanup
  file:
    path: "{{ javaci_kit }}"
    state: absent
...
